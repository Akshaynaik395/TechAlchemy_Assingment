{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class BookServiceService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.selectedBook = {};\n  }\n  addbook(book) {\n    return this.http.post('http://localhost:3000/books', book);\n  }\n  allbook() {\n    return this.http.get('http://localhost:3000/books');\n  }\n  updatebook(book) {\n    return this.http.put('http://localhost:3000/books' + `/${book._id}`, book);\n  }\n  updatebookdata(id, book) {\n    return this.http.put(`${'http://localhost:3000/books'}/${id}`, book);\n  }\n  refreshbookList() {\n    this.getbook().subscribe(res => {\n      this.book = res;\n    });\n  }\n  getbook() {\n    throw new Error('Method not implemented.');\n  }\n  deletebook(id) {\n    return this.http.delete('http://localhost:3000/books' + `/${id}`);\n  }\n}\nBookServiceService.ɵfac = function BookServiceService_Factory(t) {\n  return new (t || BookServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute));\n};\nBookServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookServiceService,\n  factory: BookServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAe,EAASC,MAAqB;IAA7C,SAAI,GAAJD,IAAI;IAAoB,WAAM,GAANC,MAAM;IAFlD,iBAAY,GAAQ,EAAE;EAE+C;EAErEC,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,6BAA6B,EAACD,IAAI,CAAC;EAC3D;EACAE,OAAO;IACL,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,6BAA6B,CAAC;EACrD;EAEAC,UAAU,CAACJ,IAAS;IAClB,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAC,6BAA6B,GAAC,IAAIL,IAAI,CAACM,GAAG,EAAE,EAACN,IAAI,CAAC;EACzE;EACAO,cAAc,CAACC,EAAM,EAACR,IAAQ;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAC,GAAG,6BAA6B,IAAIG,EAAE,EAAE,EAACR,IAAI,CAAC;EACrE;EACAS,eAAe;IACb,IAAI,CAACC,OAAO,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC9B,IAAI,CAACZ,IAAI,GAACY,GAAa;IACzB,CAAC,CAAC;EACJ;EACAF,OAAO;IACL,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,UAAU,CAACN,EAAM;IACf,OAAO,IAAI,CAACX,IAAI,CAACkB,MAAM,CAAC,6BAA6B,GAAC,IAAIP,EAAE,EAAE,CAAC;EACjE;;AA7BWb,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAqB,SAAlBrB,kBAAkB;EAAAsB,YAFjB;AAAM","names":["BookServiceService","constructor","http","router","addbook","book","post","allbook","get","updatebook","put","_id","updatebookdata","id","refreshbookList","getbook","subscribe","res","Error","deletebook","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\Book_Strore\\frontend\\src\\app\\book-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport{HttpClient,HttpParams}from '@angular/common/http';\nimport { Book } from 'books.model';\nimport { ActivatedRoute,Route } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookServiceService {\n  book?: Book[];\n  selectedBook:Book = {};\n\n  constructor(private http:HttpClient,private router:ActivatedRoute) { }\n\n  addbook(book:Book){\n    return this.http.post('http://localhost:3000/books',book)\n  }\n  allbook(){\n    return this.http.get('http://localhost:3000/books')\n  }\n\n  updatebook(book:Book){\n    return this.http.put('http://localhost:3000/books'+`/${book._id}`,book)\n  }\n  updatebookdata(id:any,book:any){\n    return this.http.put(`${'http://localhost:3000/books'}/${id}`,book)\n  }\n  refreshbookList(){\n    this.getbook().subscribe((res)=>{\n      this.book=res as Book[];\n    })\n  }\n  getbook() {\n    throw new Error('Method not implemented.');\n  }\n  deletebook(id:any){\n    return this.http.delete('http://localhost:3000/books'+`/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}