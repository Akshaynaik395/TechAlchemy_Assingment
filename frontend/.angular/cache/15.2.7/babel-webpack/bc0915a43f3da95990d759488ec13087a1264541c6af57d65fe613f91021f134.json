{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../book-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction AllBooksComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"a\", 4)(10, \"i\");\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const book_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(book_r1.Book_Title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r1.Author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r1.ISBN);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"/\", book_r1._id, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\nexport class AllBooksComponent {\n  constructor(bookservice, routes) {\n    this.bookservice = bookservice;\n    this.routes = routes;\n  }\n  ngOnInit() {\n    this.loadbookdata();\n  }\n  loadbookdata() {\n    this.bookservice.allbook().subscribe(data => {\n      this.bookdata = data;\n    });\n  }\n  onDelete(id) {\n    if (confirm('Are you sure to delete this data...') == true) {\n      this.bookservice.deletebook(id).subscribe(data => {\n        console.log(data);\n        // this.bookservice.refreshEmployeeList();\n      });\n    } else {}\n  }\n}\nAllBooksComponent.ɵfac = function AllBooksComponent_Factory(t) {\n  return new (t || AllBooksComponent)(i0.ɵɵdirectiveInject(i1.BookServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAllBooksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllBooksComponent,\n  selectors: [[\"app-all-books\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"table\"], [\"scope\", \"col\"], [\"scope\", \"col\", \"colspan\", \"2\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"href\"]],\n  template: function AllBooksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Books data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Book Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Book Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Book Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 1);\n      i0.ɵɵtext(12, \"ISBN No\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 2);\n      i0.ɵɵtext(14, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, AllBooksComponent_tr_16_Template, 12, 4, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.bookdata);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAYKA,0BAAkC;IACjCA,qBAAS;IACTA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;IAGtBA,0BAAI;IAEiDA,uBAAM;IAAAA,iBAAI;;;;IAP3DA,eAAmB;IAAnBA,wCAAmB;IACnBA,eAAe;IAAfA,oCAAe;IACfA,eAAa;IAAbA,kCAAa;IAKZA,eAAoB;IAApBA,yEAAoB;;;ACZ/B,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,WAA8B,EAASC,MAAa;IAApD,gBAAW,GAAXD,WAAW;IAA4B,WAAM,GAANC,MAAM;EAAS;EAC5EC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EACAA,YAAY;IACV,IAAI,CAACH,WAAW,CAACI,OAAO,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAG;MAC/C,IAAI,CAACC,QAAQ,GAACD,IAAI;IACpB,CAAC,CAAC;EACJ;EACAE,QAAQ,CAACC,EAAM;IACb,IAAGC,OAAO,CAAC,qCAAqC,CAAC,IAAE,IAAI,EAAC;MACtD,IAAI,CAACV,WAAW,CAACW,UAAU,CAACF,EAAE,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAE;QAC9CM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;QACjB;MACF,CAAC,CAAC;KACH,MACG;EAGN;;AArBaR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT9BrB,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MACnBA,gCAAqB;MAGGA,uBAAO;MAAAA,iBAAK;MAC5BA,6BAAgB;MAAAA,0BAAU;MAAAA,iBAAK;MAC/BA,6BAAgB;MAAAA,4BAAW;MAAAA,iBAAK;MAChCA,8BAAgB;MAAAA,wBAAO;MAAAA,iBAAK;MAC5BA,8BAAyB;MAAAA,uBAAM;MAAAA,iBAAK;MAGxCA,8BAAO;MACNA,mEAYK;MACNA,iBAAQ;;;MAbcA,gBAAW;MAAXA,sCAAW","names":["i0","AllBooksComponent","constructor","bookservice","routes","ngOnInit","loadbookdata","allbook","subscribe","data","bookdata","onDelete","id","confirm","deletebook","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Book_Strore\\frontend\\src\\app\\all-books\\all-books.component.html","D:\\Book_Strore\\frontend\\src\\app\\all-books\\all-books.component.ts"],"sourcesContent":["<h1>Books data</h1>\n<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Book Id</th>\n        <th scope=\"col\">Book Title</th>\n        <th scope=\"col\">Book Author</th>\n        <th scope=\"col\">ISBN No</th>\n        <th scope=\"col\"colspan=2>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n     <tr *ngFor=\"let book of bookdata\">\n      <td></td>\n      <td>{{book.Book_Title}}</td>\n      <td>{{book.Author}}</td>\n      <td>{{book.ISBN}}</td>\n      <!-- <td><button>Update</button></td> -->\n      <!-- <td><button>Delete</button></td> -->\n      <td>\n        <!-- <button class=\"btn btn-primary\" type=\"button\" (click)=\"onEdit(emp)\">Edit</button> -->\n        <a href=\"/{{book._id}}\" class=\"btn btn-success\"><i>Update</i></a>\n    </td>\n\n     </tr>\n    </tbody>\n  </table>\n","import { Component ,OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookServiceService } from '../book-service.service';\n\n@Component({\n  selector: 'app-all-books',\n  templateUrl: './all-books.component.html',\n  styleUrls: ['./all-books.component.css']\n})\nexport class AllBooksComponent implements OnInit{\n  bookdata:any;\n  constructor(private bookservice:BookServiceService,private routes:Router){}\nngOnInit(): void {\n  this.loadbookdata();\n}\nloadbookdata(){\n  this.bookservice.allbook().subscribe((data:any)=>{\n    this.bookdata=data;\n  })\n}\nonDelete(id:any){\n  if(confirm('Are you sure to delete this data...')==true){\n    this.bookservice.deletebook(id).subscribe(data=>{\n      console.log(data);\n      // this.bookservice.refreshEmployeeList();\n    })\n  }\n  else{\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}